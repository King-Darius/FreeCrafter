name: CodeQL

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 6 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read

env:
  BUILD_TYPE: Release
  CMAKE_BUILD_PARALLEL_LEVEL: 4

jobs:
  analyze:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Repository hygiene check
        run: python scripts/tools/repo_guard.py

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build mesa-common-dev libglu1-mesa-dev

      - name: Bootstrap project
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          python scripts/bootstrap.py --ci
          qt_prefix="$(python - <<'PY'
import scripts.bootstrap as bs
prefix = bs.detect_qt()
if prefix is None:
    raise SystemExit("Qt installation not found after bootstrap.")
print(prefix.as_posix())
PY
)"
          echo "QT_PREFIX=${qt_prefix}" >> "${GITHUB_ENV}"

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: cpp

      - name: Configure
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DFREECRAFTER_ENABLE_ASSIMP=OFF
          -DFREECRAFTER_ENABLE_ODA=OFF
          -DCMAKE_PREFIX_PATH="${{ env.QT_PREFIX }}"

      - name: Build
        run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
