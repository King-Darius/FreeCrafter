name: Release (Windows)

on:
  push:
    tags:
      - 'v*'   # e.g. v0.1.0-alpha.2

permissions:
  contents: write  # needed to upload assets to the Release

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Repository hygiene check
        run: python scripts/tools/repo_guard.py

      - name: Install NSIS (for CPack)
        run: choco install nsis -y  # provides makensis.exe for NSIS generator

      # If you have scripts/bootstrap.py, keep this; otherwise the fallback config runs.
      - name: Configure
        shell: pwsh
        run: |
          if (Test-Path 'scripts/bootstrap.py') {
            python scripts/bootstrap.py --ci
          } else {
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          }

      - name: Build + install to staging
        run: |
          cmake --build build --config Release
          cmake --install build --config Release --prefix dist

      - name: Run test suite
        shell: pwsh
        run: |
          $env:QT_QPA_PLATFORM = "windows"
          $env:QT_OPENGL = "angle"
          Push-Location build
          try {
            ctest --output-on-failure -C Release
          } finally {
            Pop-Location
          }

      - name: Package with CPack (NSIS)
        run: |
          cd build
          cpack -G NSIS

      - name: Verify packaged artifacts
        shell: pwsh
        run: |
          $buildDir = Join-Path $PWD 'build'
          $distDir = Join-Path $PWD 'dist'
          $cpackDir = Join-Path $buildDir '_CPack_Packages'
          $exeFiles = @()
          if (Test-Path $buildDir) {
            $exeFiles += Get-ChildItem -Path $buildDir -Filter *.exe -Recurse -ErrorAction SilentlyContinue
          }
          if (Test-Path $distDir) {
            $exeFiles += Get-ChildItem -Path $distDir -Filter *.exe -Recurse -ErrorAction SilentlyContinue
          }
          if (Test-Path $cpackDir) {
            $exeFiles += Get-ChildItem -Path $cpackDir -Filter *.exe -Recurse -ErrorAction SilentlyContinue
          }
          if (-not $exeFiles) {
            throw "No Windows installer executable was produced."
          }
          Write-Host "Installer candidates:"
          foreach ($exe in $exeFiles | Sort-Object FullName -Unique) {
            Write-Host " - $($exe.FullName)"
          }

      - name: Upload .exe to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.exe
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
